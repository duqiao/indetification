<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
            http://www.springframework.org/schema/security   
            http://www.springframework.org/schema/security/spring-security-3.1.xsd">  
  

    <security:http auto-config="true" use-expressions="false" access-denied-page="/user/login_failure.html">  
      
        <!--允许ROLE_ADMIN权限访问-->  
        <security:intercept-url pattern="/adminUser1/**" access="ROLE_ADMIN" />  
        <!--允许ROLE_ADMIN权限访问  
        <security:intercept-url pattern="/**" access="ROLE_ADMIN" />  -->
        <!--允许ROLE_USER权限访问-->  
        <security:intercept-url pattern="/success.jsp" access="ROLE_USER,ROLE_ADMIN" />  
        <!--允许IS_AUTHENTICATED_ANONYMOUSLY匿名访问-->  
        <security:intercept-url pattern="/anonymously.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" />  
          
        <!-- filters="none"  不过滤这些资源
        <security:intercept-url pattern="/js/**" filters="none" />  
        <security:intercept-url pattern="/index.jsp" filters="none" />  -->  
  
        <!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 -->  
        <security:form-login login-page="/login" authentication-failure-url="/login?error"  
            default-target-url="/adminUser/init" username-parameter="username"
			password-parameter="password"/>  

        <security:logout invalidate-session="true" logout-success-url="/login?logout" logout-url="/j_spring_security_logout" />  
  
        <security:session-management>  
            <security:concurrency-control error-if-maximum-exceeded="true" max-sessions="1" />  
        </security:session-management>  
  
    </security:http>  
    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->  
    <security:authentication-manager>  
        <security:authentication-provider user-service-ref="customUserDetailsService"/>  
            <!--  <security:password-encoder ref="passwordEncoder" />  
        </security:authentication-provider>  -->
    </security:authentication-manager>  
  
    <!-- 对密码进行MD5编码 
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />  -->  
  

    <bean id="customUserDetailsService" class="com.main.identification.service.CustomUserDetailsService" />  

</beans>  