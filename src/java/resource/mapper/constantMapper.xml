<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.main.identification.repository.ConstantRepository">

	<resultMap id="constantMap" type="ConstantModel">
		<result column="CONSTANT_TYPE" property="constantType"/>
		<result column="CONSTANT_NO" property="constantNo"/>
		<result column="CONSTANT_NAME" property="constantName"/>
		<result column="PARENT_NO" property="parentNo"/>
		<result column="SORT" property="sort"/>
		<result column="ATTRIBUTE_1" property="attribute1"/>
		<result column="ATTRIBUTE_2" property="attribute2"/>
		<result column="ATTRIBUTE_3" property="attribute3"/>

		<result column="DELETE_FLAG" property="deleteFlag"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="LAST_MODIFY_BY" property="lastModifyBy"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="LAST_MODIFY_TIME" property="lastModifyTime"/>
	</resultMap>

  <sql id="searchCondSql">
  	<where>
  	</where>  
  </sql>
  
  <select id="selectConstantCount" resultType="int" parameterType="ConstantModel">
    select 
	  count(1)
    from EQUIPMENT equipment
	<include refid="searchCondSql"/>  
  </select>

  <select id="selectConstant" resultMap="constantMap" parameterType="ConstantModel">
    SELECT 
	   user.admin_user_id,
	   user.admin_user_name,
	   user.role_id,
       user.role_name ,
       user.question_category_id ,
       user.question_category_name,
	   user.password,
	   user.create_date,
	   user.create_id,
	   user.update_id ,
	   user.update_date,
	   user.createor,
	   user.updateor
    FROM admin_user user
    
   <include refid="searchCondSql"/>  
   	LIMIT ${startNo}, ${pageSize}
  </select>
  
  <insert id="insertConstant" parameterType="ConstantModel"  >
    
	INSERT INTO constant
	 (
	  `CONSTANT_TYPE`, 
	  `CREATE_BY`, 
	  `LAST_MODIFY_BY`, 
	  `DELETE_FLAG`, 
	  `CONSTANT_NO`, 
	  `CONSTANT_NAME`,
	  `PARENT_NO`,
	  `CREATE_TIME`,
	  `LAST_MODIFY_TIME`
	  ) 
    VALUES(
    	#{constantType},
    	#{createBy},
    	#{lastModifyBy},
    	#{deleteFlag},
    	#{constantNo},
    	#{constantName},
    	#{parentNo},
    	now(),
    	now()
    )
  </insert> 
  
   <update id="updateConstant" parameterType="ConstantModel">
    UPDATE admin_user
    SET  
       admin_user_name = #{userName},
       
      <if test="password != null and password != ''">  
         `password` = #{password},
      </if>  
      role_id = #{roleId},
      role_name=#{roleName},
       <if test="questionCategoryIds != null and questionCategoryIds != ''">  
      question_category_id = #{questionCategoryIds},
      user.question_category_name=#{questionCategoryNames},
      </if>
      `update_id` = #{updateId},
       updateor = #{updateor},
       update_date = now()
    WHERE admin_user_id = #{userId}
  </update>
  
  
  <select id="findParentSeq" resultType="int">
  	SELECT NEXTVAL('ParentSeq')
  </select> 
  
  <select id="findChildrenSeq" resultType="int">
 	 SELECT NEXTVAL('ChildrenSeq')
  </select> 
  
  
</mapper> 